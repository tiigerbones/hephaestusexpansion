plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url = "https://libraries.minecraft.net/" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://maven.shedaniel.me/"  }
	maven { url = "https://maven.wispforest.io" } // TOP
	maven { url = "https://maven.blamejared.com" } // CraftTweaker, Immersive Engineering
	maven { url = "https://www.cursemaven.com" }
	maven { url = "https://maven.ladysnake.org/releases" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.vram.io" }
	maven { url = "https://jitpack.io" }
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		url "https://cursemaven.com"
	}
}

loom {
    runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			client()
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${modid}"
			property "porting_lib.datagen.existing_resources", file("src/main/resources").absolutePath
			property "porting_lib.datagen.existing_mods", "tconstruct"
			runDir "build/datagen"
		}
	}
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {


    // lombok
    compileOnly("org.projectlombok:lombok:1.18.22")
    annotationProcessor("org.projectlombok:lombok:1.18.22")

    testCompileOnly("org.projectlombok:lombok:1.18.22")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.22")

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()


	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    for (String module in port_lib_modules.split(",")) {
        modImplementation("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version+$minecraft_base_version")
    }

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Hephaestus
	modImplementation ("slimeknights.tconstruct:Hephaestus:${minecraft_version}-${hephaestus_version}") {
		exclude(group: "me.shedaniel:RoughlyEnoughItems-fabric")
		exclude(group: "me.shedaniel:RoughlyEnoughItems-api-fabric")
	}


    // Implementations
	modImplementation("slimeknights.mantle:Mantle:${minecraft_version}-${mantle_version}")


	modImplementation annotationProcessor(include("com.github.mattidragon:configtoolkit:$configtoolkit_version"))
	// I can't believe I have to say this in a Minecraft video, but here it comes:
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

	// HespheastusPlus
	if (project.use_heph_plus.toBoolean()) {
		modImplementation "maven.modrinth:hephaestusplus:${project.hp_version}"
	} else {
		modCompileOnly "maven.modrinth:hephaestusplus:${project.hp_version}"
	}

    // Additional Entity Attributes
    modImplementation ("maven.modrinth:additionalentityattributes:${project.aea_version}")

    // For testing

	// HespheastusPlus
	if (project.use_bettercombat.toBoolean()) {
		modLocalRuntime "maven.modrinth:better-combat:${project.bettercombat_version}"
		modLocalRuntime "maven.modrinth:playeranimator:${project.playeranimator_version}"
	} else {
		modCompileOnly "maven.modrinth:better-combat:${project.bettercombat_version}"
		modCompileOnly "maven.modrinth:playeranimator:${project.playeranimator_version}"
	}



    modLocalRuntime "maven.modrinth:cloth-config:${project.cloth_version}"
    modLocalRuntime "maven.modrinth:mythicmetals:${project.mm_version}"
    modLocalRuntime "maven.modrinth:alloy-forgery:${project.af_version}"
    modLocalRuntime("maven.modrinth:straw-dummy:1.9.0")
    modLocalRuntime("net.fabricmc:fabric-language-kotlin:1.10.18+kotlin.1.9.22")
    modLocalRuntime "maven.modrinth:jade:${project.jade_version}"


	// Come on, trigger the Bytecode Junkie
	modRuntimeOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modRuntimeOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"


	implementation("javax.annotation:javax.annotation-api:1.3.2")
	compileOnly 'com.google.code.findbugs:jsr305:3.0.1'


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
